unit Main;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, dxSkinsCore, dxSkinBlack, dxSkinBlue,
  dxSkinBlueprint, dxSkinCaramel, dxSkinCoffee, dxSkinDarkRoom, dxSkinDarkSide,
  dxSkinDevExpressDarkStyle, dxSkinDevExpressStyle, dxSkinFoggy,
  dxSkinGlassOceans, dxSkinHighContrast, dxSkiniMaginary, dxSkinLilian,
  dxSkinLiquidSky, dxSkinLondonLiquidSky, dxSkinMcSkin, dxSkinMetropolis,
  dxSkinMetropolisDark, dxSkinMoneyTwins, dxSkinOffice2007Black,
  dxSkinOffice2007Blue, dxSkinOffice2007Green, dxSkinOffice2007Pink,
  dxSkinOffice2007Silver, dxSkinOffice2010Black, dxSkinOffice2010Blue,
  dxSkinOffice2010Silver, dxSkinOffice2013DarkGray, dxSkinOffice2013LightGray,
  dxSkinOffice2013White, dxSkinOffice2016Colorful, dxSkinOffice2016Dark,
  dxSkinPumpkin, dxSkinSeven, dxSkinSevenClassic, dxSkinSharp, dxSkinSharpPlus,
  dxSkinSilver, dxSkinSpringTime, dxSkinStardust, dxSkinSummer2008,
  dxSkinTheAsphaltWorld, dxSkinTheBezier, dxSkinsDefaultPainters,
  dxSkinValentine, dxSkinVisualStudio2013Blue, dxSkinVisualStudio2013Dark,
  dxSkinVisualStudio2013Light, dxSkinVS2010, dxSkinWhiteprint,
  dxSkinXmas2008Blue, cxGraphics, cxControls, cxLookAndFeels,
  cxLookAndFeelPainters, dxRibbonSkins, dxRibbonCustomizationForm, dxStatusBar,
  dxRibbonStatusBar, cxClasses, dxRibbon, dxBar,
  dxRibbonForm, Vcl.Menus;

type
  TfrmMain = class(TdxRibbonForm)
    bMan: TdxBarManager;
    ribMain: TdxRibbon;
    rsbMain: TdxRibbonStatusBar;
    pmMain: TPopupMenu;
    MostrarOcultarpestaas1: TMenuItem;
    MostrarOcultarbarradebotones1: TMenuItem;
    MostrarOcultarbarradeestado1: TMenuItem;
    Cambiarttulodelaventana1: TMenuItem;
    Editarbarra1: TMenuItem;
    pmRib: TPopupMenu;
    EditarBarra2: TMenuItem;
    procedure MostrarOcultarpestaas1Click(Sender: TObject);
    procedure MostrarOcultarbarradebotones1Click(Sender: TObject);
    procedure MostrarOcultarbarradeestado1Click(Sender: TObject);
    procedure Cambiarttulodelaventana1Click(Sender: TObject);
    procedure Editarbarra1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure ribMainMouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
  private
    { Private declarations }
    xi,yi : Integer;

    procedure SaveConfig;
    procedure WMEnterSizeMove(var Message: TMessage) ; message WM_ENTERSIZEMOVE;
    procedure WMMove(var Message: TMessage) ; message WM_MOVE;
    procedure WMExitSizeMove(var Message: TMessage) ; message WM_EXITSIZEMOVE;
  public
    { Public declarations }
    idf : Integer;
    procedure LoadConfig;
  end;

var
  frmMain: TfrmMain;

implementation

{$R *.dfm}

{ TfrmMain }

procedure TfrmMain.Cambiarttulodelaventana1Click(Sender: TObject);
var
  c : string;
begin
  c := InputBox('Título ventana','Escriba el título de la ventana:',frmMain.Caption);
  frmMain.Caption := c;
end;

procedure TfrmMain.Editarbarra1Click(Sender: TObject);
begin
//  if (not Assigned(frmBarEditor))or(frmBarEditor.Owner = nil) then
//    Application.CreateForm(TfrmBarEditor, frmBarEditor);
//  frmBarEditor.BuildEditorList(self, idf);
//  frmBarEditor.Show;
end;

procedure TfrmMain.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  SaveConfig;
end;

procedure TfrmMain.FormCreate(Sender: TObject);
begin
  LoadConfig;
end;

procedure TfrmMain.LoadConfig;
begin

end;

procedure TfrmMain.MostrarOcultarbarradebotones1Click(Sender: TObject);
begin
  ribMain.ShowTabGroups := not ribMain.ShowTabGroups;
end;

procedure TfrmMain.MostrarOcultarbarradeestado1Click(Sender: TObject);
begin
  rsbMain.Visible := not rsbMain.Visible;
end;

procedure TfrmMain.MostrarOcultarpestaas1Click(Sender: TObject);
begin
  ribMain.ShowTabHeaders := not ribMain.ShowTabHeaders;
end;

procedure TfrmMain.ribMainMouseDown(Sender: TObject; Button: TMouseButton;
  Shift: TShiftState; X, Y: Integer);
begin
  if Button = mbRight then
    with Self.ClientToScreen(Point(x,y)) do
      pmRib.Popup(x,y);
end;

procedure TfrmMain.SaveConfig;
begin

end;

procedure TfrmMain.WMEnterSizeMove(var Message: TMessage);
begin
//  if (frmBarEditor <> nil)and (frmBarEditor.Owner <> nil) then
//  begin
//    xi := frmBarEditor.Left - Self.Left;
//    yi := frmBarEditor.Top - Self.Top;
//  end;
end;

procedure TfrmMain.WMExitSizeMove(var Message: TMessage);
begin

end;

procedure TfrmMain.WMMove(var Message: TMessage);
begin
//  if (frmBarEditor <> nil)and (frmBarEditor.Owner <> nil) then
//  begin
//    frmBarEditor.Left := Self.Left + xi;
//    frmBarEditor.Top := Self.Top + yi;
//  end;
end;

end.
